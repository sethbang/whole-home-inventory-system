server {
    listen 80;
    server_name localhost;

    # Add MIME types
    types {
        image/png     png;
        text/html     html;
        text/css      css;
        application/javascript js;
        application/json      json;
        application/manifest+json webmanifest;
    }

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;

        # Add headers for PWA assets
        location ~* \.(png)$ {
            add_header Cache-Control "public, max-age=31536000";
            add_header Content-Type "image/png";
            try_files $uri =404;
        }

        # Add headers for manifest
        location /site.webmanifest {
            add_header Cache-Control "no-cache";
            add_header Content-Type "application/manifest+json";
            try_files $uri =404;
        }

        # Add headers for service worker
        location /sw.js {
            add_header Cache-Control "no-cache";
            add_header Service-Worker-Allowed "/";
        }
    }

    location /api {
        proxy_pass https://backend:27182;
        proxy_ssl_verify off;  # Trust self-signed cert for internal communication
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept, Origin, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # CORS headers for actual requests
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept, Origin, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Type, Content-Disposition, Authorization' always;
    }
}